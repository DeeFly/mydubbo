<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       xmlns:context="http://www.springframework.org/schema/context">
    <!--事务开启注解-->
    <tx:annotation-driven/>
    <context:annotation-config/>
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>

    <!--配置中心
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="properties" ref="propertiesConfiguration"/>
    </bean>

    <bean id="propertiesConfiguration" class="com.github.diamond.client.PropertiesConfigurationFactoryBean"/>-->

    <!--<bean id="logbackRuntimeLevelUpdater" class="net.xuele.common.config.LogbackRuntimeLevelUpdater">
        <property name="rootLogLevelName" value="log.service.level"/>
        <property name="rootLogLevel" value="${log.service.level}"/>
    </bean>-->



    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="driverClassName" value="${mysql.driverClassName}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
        <property name="initialSize" value="${mysql.initialSize}"/>
        <property name="maxActive" value="${mysql.maxActive}"/>
        <property name="maxIdle" value="${mysql.maxIdle}"/>
        <property name="minIdle" value="${mysql.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${mysql.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${mysql.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${mysql.validationQuery}"/>
        <property name="testOnBorrow" value="${mysql.testOnBorrow}"/>
        <property name="testWhileIdle" value="${mysql.testWhileIdle}"/>
        <property name="validationInterval" value="${mysql.validationInterval}"/>
        <property name="validationQueryTimeout" value="${mysql.validationQueryTimeout}"/>
        <property name="removeAbandoned" value="${mysql.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${mysql.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${mysql.logAbandoned}"/>
        <property name="defaultTransactionIsolation" value="${mysql.defaultTransactionIsolation}"/>
    </bean>

    <!--这里最好指定为单利，否则可能报错
    java.lang.UnsupportedOperationException: Manual close is not allowed over a Spring managed SqlSession-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.gaofei.persist.dao"/>
    </bean>

    <!--aop 事务-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- propagation默认为"REQUIRED"-->
            <tx:method name="subTran*" propagation="NOT_SUPPORTED" isolation="READ_UNCOMMITTED"  read-only="false" />
            <tx:method name="del*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="save*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <!-- 其余方法不加事务-->
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="pc" expression="execution(public * com.gaofei.impl.*.*(..))"/>
        <!--把事务控制在Service层-->
        <aop:advisor pointcut-ref="pc" advice-ref="txAdvice"/>
    </aop:config>

</beans>